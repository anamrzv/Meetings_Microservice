services:

  rabbit_mq:
    ports:
      - "5672:5672"
      - "15672:15672"
      - "61613:61613"
    build:
      dockerfile: Dockerfile

  ##### USER SERVICE
  user_database:
    image: postgres:latest
    container_name: user_database
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 123
      POSTGRES_DB: user_db
      PGDATA: "/var/lib/postgresql/data/pgdata"
    ports:
      - "5432:5432"
    volumes:
      - user-db-data:/var/lib/postgresql/data
      - ./user_srv/src/main/resources/schema.sql:/docker-entrypoint-initdb.d/create_db.sql
    networks:
      - user-network

  user-application:
    container_name: user-srv-eureka-client
    build:
      context: ./user_srv
      dockerfile: Dockerfile
    ports:
      - "9001:9001"
    environment:
      DATABASE_URL: jdbc:postgresql://user_database:5432/user_db
      DATABASE_NAME: user_db
      DATABASE_PASSWORD: 123
      DATABASE_USER: postgres
      SPRING_JPA_HIBERNATE_DDL_AUTO: none
      CONFIG_URI: optional:configserver:http://configuration-server:8888
      EUREKA_URI: http://service-registry:8761/eureka/
      HOSTNAME: user-srv-eureka-client
    depends_on:
      - user_database
      - configuration-server
    links:
      - service-registry
    networks:
      - user-network
      - backend

  ##### MEETING SERVICE
  meeting_database:
    image: postgres:latest
    container_name: meeting_database
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 123
      POSTGRES_DB: meeting_db
      PGDATA: "/var/lib/postgresql/data/pgdata"
    ports:
      - "5433:5432"
    volumes:
      - meeting-db-data:/var/lib/postgresql/data
      - ./meeting_srv/src/main/resources/schema.sql:/docker-entrypoint-initdb.d/create_db.sql
    networks:
      - meeting-network

  meeting-application:
    container_name: meeting-srv-eureka-client
    depends_on:
      - meeting_database
      - configuration-server
    build:
      context: ./meeting_srv
      dockerfile: Dockerfile
    ports:
      - "9002:9002"
    environment:
      DATABASE_URL: jdbc:postgresql://meeting_database:5432/meeting_db
      DATABASE_NAME: meeting_db
      DATABASE_PASSWORD: 123
      DATABASE_USER: postgres
      SPRING_JPA_HIBERNATE_DDL_AUTO: none
      CONFIG_URI: optional:configserver:http://configuration-server:8888
      EUREKA_URI: http://service-registry:8761/eureka/
      HOSTNAME: meeting-srv-eureka-client
      USER_HOSTNAME: ws://meeting-srv-eureka-client:9001/websocket-user
    links:
      - service-registry
    networks:
      - meeting-network
      - backend

  ##### EVENT SERVICE
  event_database:
    image: postgres:latest
    container_name: event_database
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 123
      POSTGRES_DB: event_db
      PGDATA: "/var/lib/postgresql/data/pgdata"
    ports:
      - "5434:5432"
    volumes:
      - event-db-data:/var/lib/postgresql/data
      - ./event_srv/src/main/resources/schema.sql:/docker-entrypoint-initdb.d/create_db.sql
    networks:
      - event-network

  event-application:
    container_name: event-srv-eureka-client
    depends_on:
      - event_database
      - configuration-server
    build:
      context: ./event_srv
      dockerfile: Dockerfile
    ports:
      - "9003:9003"
    environment:
      DATABASE_URL: jdbc:postgresql://event_database:5432/event_db
      DATABASE_NAME: event_db
      DATABASE_PASSWORD: 123
      DATABASE_USER: postgres
      SPRING_JPA_HIBERNATE_DDL_AUTO: none
      CONFIG_URI: optional:configserver:http://configuration-server:8888
      EUREKA_URI: http://service-registry:8761/eureka/
      HOSTNAME: event-srv-eureka-client
    links:
      - service-registry
    networks:
      - event-network
      - backend

  ##### DIALOG SERVICE
  dialog_database:
    image: postgres:latest
    container_name: dialog_database
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 123
      POSTGRES_DB: dialog_db
      PGDATA: "/var/lib/postgresql/data/pgdata"
    ports:
      - "5435:5432"
    volumes:
      - dialog-db-data:/var/lib/postgresql/data
      - ./dialog_srv/src/main/resources/schema.sql:/docker-entrypoint-initdb.d/create_db.sql
    networks:
      - dialog-network

  dialog-application:
    container_name: dialog-srv-eureka-client
    depends_on:
      - dialog_database
      - configuration-server
    build:
      context: ./dialog_srv
      dockerfile: Dockerfile
    ports:
      - "9004:9004"
    environment:
      DATABASE_URL: jdbc:postgresql://dialog_database:5432/dialog_db
      DATABASE_NAME: dialog_db
      DATABASE_PASSWORD: 123
      DATABASE_USER: postgres
      SPRING_JPA_HIBERNATE_DDL_AUTO: none
      CONFIG_URI: optional:configserver:http://configuration-server:8888
      EUREKA_URI: http://service-registry:8761/eureka/
      HOSTNAME: dialog-srv-eureka-client
    links:
      - service-registry
    networks:
      - dialog-network
      - backend

  ##### CHAT SERVICE
  chat_database:
    image: postgres:latest
    container_name: chat_database
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 123
      POSTGRES_DB: chat_db
      PGDATA: "/var/lib/postgresql/data/pgdata"
    ports:
      - "5436:5432"
    volumes:
      - chat-db-data:/var/lib/postgresql/data
      - ./chat_srv/src/main/resources/schema.sql:/docker-entrypoint-initdb.d/create_db.sql
    networks:
      - chat-network

  chat-application:
    container_name: chat-srv-eureka-client
    depends_on:
      - chat_database
      - configuration-server
    build:
      context: ./chat_srv
      dockerfile: Dockerfile
    ports:
      - "9005:9005"
    environment:
      DATABASE_URL: jdbc:postgresql://chat_database:5432/chat_db
      DATABASE_PASSWORD: 123
      DATABASE_USER: postgres
      SPRING_JPA_HIBERNATE_DDL_AUTO: none
      CONFIG_URI: optional:configserver:http://configuration-server:8888
      EUREKA_URI: http://service-registry:8761/eureka/
      HOSTNAME: chat-srv-eureka-client
    links:
      - service-registry
    networks:
      - backend
      - chat-network

  configuration-server:
    container_name: configuration-server
    build:
      context: ./configuration_server
      dockerfile: Dockerfile
    ports:
      - "8888:8888"
    networks:
      - backend

  service-registry:
    container_name: service-registry
    build:
      context: ./service_registry
      dockerfile: Dockerfile
    ports:
      - "8761:8761"
    environment:
      CONFIG_URI: optional:configserver:http://configuration-server:8888
      EUREKA_URI: http://service-registry:8761/eureka/
    depends_on:
      configuration-server:
        condition: service_started
    networks:
      - backend

  api-gateway-application:
    container_name: api-gateway-application
    build:
      context: ./api_gateway
      dockerfile: Dockerfile
    ports:
      - "8082:8082"
    environment:
      CONFIG_URI: optional:configserver:http://configuration-server:8888
      EUREKA_URI: http://service-registry:8761/eureka/
    depends_on:
      configuration-server:
        condition: service_completed_successfully
      service-registry:
        condition: service_completed_successfully
      user-application:
        condition: service_completed_successfully
      meeting-application:
        condition: service_completed_successfully
      event-application:
        condition: service_completed_successfully
      dialog-application:
        condition: service_completed_successfully
      chat-application:
        condition: service_completed_successfully
    networks:
      - backend


networks:
  backend:
  chat-network:
  dialog-network:
  event-network:
  meeting-network:
  user-network:

volumes:
  user-db-data:
  meeting-db-data:
  event-db-data:
  dialog-db-data:
  chat-db-data: